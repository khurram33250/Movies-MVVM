apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.example.hasham.movies_mvvm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
//            minifyEnabled false
//            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
//            useProguard false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    project.ext { appName = 'Movies-MVVM' }
                    def formattedDate = new Date().format('yyyyMMdd')
                    def newName = outputFileName
                    newName = newName.replace("app-", "$project.ext.appName-")
                    newName = newName.replace("-release", "-release" + formattedDate)
                    //noinspection GroovyAssignabilityCheck
                    outputFileName = new File(outputFileName, newName)
                }
            }
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        staging {
            applicationIdSuffix = ".mock"
            dimension "default"
            buildConfigField 'String', 'HOST', '"https://api.themoviedb.org/3/"'
            buildConfigField 'String', 'API_KEY', '"c43d880f1595a7aa42ae0cdbcc6d6234"'
        }
        production {
            dimension "default"
            buildConfigField 'String', 'HOST', '"https://api.themoviedb.org/3/"'
            buildConfigField 'String', 'API_KEY', '"c43d880f1595a7aa42ae0cdbcc6d6234"'
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'mock') {
            variant.ignore = true
        }
    }

    buildToolsVersion '27.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    compile "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    // annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:common-java8:1.0.0"

    // dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2LibraryVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2LibraryVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.dagger2LibraryVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2LibraryVersion"

    // reactive
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    kapt 'com.android.databinding:compiler:3.0.1'

    implementation "com.squareup.picasso:picasso:$rootProject.picassoLibraryVersion"
//    implementation "com.squareup.moshi:moshi:$rootProject.moshiLibraryVersion"
//    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.converterMoshiLibraryVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonLibraryVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.gsonConverterLibraryVersion"
    implementation "com.squareup.okio:okio:$rootProject.okioLibraryVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpLibraryVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptorLibraryVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitLibraryVersion"
    implementation "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyLibraryVersion"
    compile 'com.airbnb.android:lottie:2.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    debugCompile 'com.amitshekhar.android:debug-db:1.0.1'
}
